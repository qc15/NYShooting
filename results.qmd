# Results

```{r, include = FALSE, echo = FALSE}
library(tidyr)
library(dplyr)
library(ggplot2)
library(lubridate) 
library(vcd)
df = read.csv("data/raw/NYPD_Shooting_Incident_Data.csv")
head(df)

df$OCCUR_DATE <- as.Date(df$OCCUR_DATE, format = "%m/%d/%Y")
df
```


## Number of Incidents over Years
```{r, }
crime_data <- df |>
  mutate(YearMonth = format(as.Date(OCCUR_DATE), "%Y-%m")) |>
  group_by(YearMonth, BORO) |>
  summarise(IncidentCount = n(), .groups = "drop") |>
  ungroup()
```

```{r}
crime_data <- df |>
  mutate(YearMonth = format(as.Date(OCCUR_DATE, "%m/%d/%Y"), "%Y-%m"))

all_combinations <- crime_data |>
  distinct(YearMonth, BORO) |>
  complete(YearMonth, BORO, fill = list(IncidentCount = 0))

crime_data_complete <- crime_data |>
  group_by(YearMonth, BORO) |>
  summarise(IncidentCount = n(), .groups = "drop") |>
  right_join(all_combinations, by = c("YearMonth", "BORO")) |>
  replace_na(list(IncidentCount = 0)) |>
  mutate(YearMonth = as.Date(paste0(YearMonth, "-01"), format = "%Y-%m-%d")) |>
  arrange(YearMonth)
```

```{r}
# Reorder BORO based on the observed rank
crime_data_complete$BORO <- factor(
  crime_data_complete$BORO,
  levels = c("BROOKLYN", "BRONX", "QUEENS", "MANHATTAN", "STATEN ISLAND")
)

ggplot(crime_data_complete, aes(x = YearMonth, y = IncidentCount, color = BORO, group = BORO)) +
  geom_line(linewidth = 1) +  
  labs(title = "Number of Incidents Over Time by Borough",
       x = "Year-Month", y = "Number of Incidents", color = "Borough") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```
From the plot above, we found that Brooklyn almost always has the highest number of incidents in each month and Bronx almost has the second-highest number of incidents in each month. These two boroughs also have the most unstable number of incidents in each month. Queens and Manhattan contain similar number of incidents in each month. The number of incidents in Staten Island is smallest among all boroughs, maybe because of its  petite area.

It is also noticeable that the number of incidents in each borough decreases to one level in 2013-2016 (especially for Brooklyn and Bronx) and decreases to another level in 2017-2019, but there exists a sharp increase in 2020, which is probably due to the pandemic and the police brutality protests in the wake of George Floyd's murder. The number of incidents in Brooklyn and Bronx, after 2020, returns back to a level similar to the level in 2013-2016, while it didn't decrease until 2023 in Queens and Manhattan.

From the plot above, we find that there might exist a cyclic pattern in boroughs other than Staten Island, where each year is a cycle. To give a closer look at it, we facet this plot by year, which is shown below.

```{r, include = FALSE, echo = FALSE}
crime_data_complete <- crime_data_complete |>
  mutate(Month = month(YearMonth, label = TRUE))


ggplot(crime_data_complete, aes(x = YearMonth, y = IncidentCount, color = BORO, group = BORO)) +
  geom_line(size = 1) +
  labs(title = "Number of Incidents Over Time by Borough",
       x = "Year-Month", y = "Number of Incidents", color = "Borough") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) + 
  facet_wrap(~ Month, ncol = 3)
```

```{r, fig.height=12, fig.width=10}
crime_data_complete <- crime_data_complete |>
  mutate(Year = format(as.Date(paste0(YearMonth, "-01"), "%Y-%m-%d"), "%Y"))  # Extract year

ggplot(crime_data_complete, aes(x = YearMonth, y = IncidentCount, color = BORO, group = BORO)) +
  geom_line(size = 1) +  
  labs(
    title = "Number of Incidents Over Each Year by Borough",
    x = "Year-Month", y = "Number of Incidents", color = "Borough"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  facet_wrap(~ Year, scales = "free_x")  

```
The plot above shows the number of shooting incidents over each year in each borough. From the plot, we can see that the cyclic pattern is not very strong. However, it shows that the number of shooting incidents in summer is larger than the number of shooting in other months, especially for Brooklyn and Bronx.

```{r, echo = FALSE, include = FALSE}
library(ggplot2)
library(dplyr)

# Filter data for Brooklyn
brooklyn_data <- crime_data_complete |>
  filter(BORO == "BROOKLYN") |>
  mutate(Month = format(YearMonth, "%B"))

# Plot Brooklyn incidents with one line for each month
ggplot(brooklyn_data, aes(x = as.numeric(format(YearMonth, "%Y")), y = IncidentCount, color = Month, group = Month)) +
  geom_line(size = 1) +
  labs(title = "Brooklyn Incident Numbers by Month",
       x = "Year", y = "Incident Count", color = "Month") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  scale_color_brewer(palette = "Paired")  # Use a distinct color palette
```

```{r, include = FALSE, echo = FALSE}
library(lubridate)

crime_data <- crime_data |>
  mutate(OCCUR_TIME = hms::as_hms(OCCUR_TIME))

crime_data <- crime_data |>
  mutate(TimePeriod = floor(hour(OCCUR_TIME) / 2) * 2)

time_counts <- crime_data |>
  group_by(TimePeriod) |>
  summarise(Count = n())

ggplot(time_counts, aes(x = TimePeriod, y = Count)) +
  geom_bar(stat = "identity") +
  scale_x_continuous(breaks = seq(0, 22, by = 2), labels = paste(seq(0, 22, by = 2), seq(2, 24, by = 2), sep = "-")) +
  labs(title = "Number of Incidents by 2-Hour Period",
       x = "2-Hour Period", y = "Number of Incidents") +
  theme_minimal()

```

## Histogram: OCCUR_TIME (0-2, 2-4, …, 22-24)
```{r}
df$OCCUR_HOUR <- as.numeric(sub(":.*", "", df$OCCUR_TIME))

time_hist_data <- df %>%
  mutate(TIME_BIN = cut(OCCUR_HOUR, breaks = seq(0, 24, by = 2), right = FALSE, include.lowest = TRUE)) %>%
  group_by(TIME_BIN) %>%
  summarise(Frequency = n()) %>%
  mutate(Percentage = Frequency / sum(Frequency) * 100)

# print(time_hist_data)
```

```{r}
ggplot(time_hist_data, aes(x = TIME_BIN, y = Percentage)) +
  geom_bar(stat = "identity", fill = "steelblue", color = "black", alpha = 1) +
  labs(title = "Histogram of Occur Time", 
       x = "Time Interval (Hours)", 
       y = "Percentage (%)") +
  scale_y_continuous(labels = scales::percent_format(scale = 1)) +
  theme_grey()
```
```{r}

df$TIME_BIN <- cut(df$OCCUR_HOUR, breaks = seq(0, 24, by = 2), right = FALSE, include.lowest = TRUE)

ggplot(df, aes(x = TIME_BIN, fill = BORO)) +
  geom_bar(alpha = 1, color = "black") +
  labs(title = "Histogram of Occur Time by Region", 
       x = "Time Interval (Hours)", 
       y = "Frequency") +
  facet_wrap(~ BORO, ncol = 3) +
  theme_grey() + 
  theme(axis.text.x = element_text(size=8,angle=45, hjust = 1))  
```
From the histogram above, we can observe that over 50% of shooting incidents occur between 8 PM and 4 AM, with the peak happening between 10 PM and 2 AM. This pattern is consistent across all regions, even in Staten Island, which has the lowest population. This aligns with the operational dynamics of most cities, especially in a place like New York, which does not enforce a curfew. Many shops and restaurants remain open even during the early hours of the morning, resulting in a nighttime traffic flow that is not significantly lower than during the day. However, reduced police presence at night, particularly around subway stations, leads to a higher number of shooting incidents that go unchecked. Conversely, we can see that 6 AM to 10 AM is the time period with the fewest shooting incidents. On the one hand, most people are at home resting during these hours; on the other hand, the city begins its new day of operations, and workers come out to maintain order. Therefore, it is not surprising that shooting incidents drop significantly during this time.


## Line plot: Incident in one year
Based on the Line Plot: Number of Incidents per Year/Month, we observe that the number of shooting incidents during this year is particularly high, likely due to the impact of the pandemic. Therefore, we selected this year as a comprehensive sample to analyze the day-of-week effect.
```{r}
df$OCCUR_DATE <- as.Date(df$OCCUR_DATE, format = "%m/%d/%Y")
df <- df %>%
  mutate(
    Day_of_Week = wday(OCCUR_DATE, label = TRUE, week_start = 1), 
    Month = month(OCCUR_DATE, label = TRUE),                     
    Year = year(OCCUR_DATE)                                      
  )

df_2020 <- df %>% filter(Year == 2020)

daily_counts <- df_2020 %>%
  group_by(OCCUR_DATE, Day_of_Week) %>%
  summarise(Incident_Count = n())

ggplot(daily_counts, aes(x = OCCUR_DATE, y = Incident_Count, group = Day_of_Week)) +
  geom_line(color = "black", size = 0.7) +
  facet_wrap(~ Day_of_Week, ncol = 3) +
  labs(
    title = "Daily Shooting Incidents in 2020 by Day of Week",
    x = "Date",
    y = "Number of Incidents"
  ) +
  theme_grey()+
  theme(axis.text.x = element_text(size=5,angle=45, hjust = 1))
```

```{r}
ggplot(daily_counts, aes(x = OCCUR_DATE, y = Incident_Count, group = Day_of_Week)) +
  geom_line(color = "black", size = 0.7) +
  geom_smooth(se = FALSE, color = "blue", size = 1) +
  facet_wrap(~ Day_of_Week, ncol = 7) +
  labs(
    title = "Daily Shooting Incidents in 2020 by Day of Week (With Smoother)",
    x = "Date",
    y = "Number of Incidents"
  ) +
  theme_grey()+
  theme(axis.text.x = element_text(size=5, hjust = 1))
```
With the help of the smoother, we can observe that shooting incidents are generally higher on weekends compared to weekdays, especially on Sundays. This aligns with common sense, as most people work during the weekdays, while weekends are typically reserved for relaxation or social gatherings. This may cause people staying out later at night, which, as seen in our Histogram: OCCUR_TIME (0-2, 2-4, …, 22-24), is when incidents are more likely to occur, matching this pattern.

# Cleveland dot plot: VIC_SEX
```{r, include = FALSE, echo = FALSE}
crime_data <- crime_data |>
  mutate(YearMonth = as.Date(paste0(YearMonth, "-01"), format = "%Y-%m-%d")) |>
  mutate(YEAR = year(YearMonth))

data_summary <- crime_data |>
  group_by(YEAR, VIC_SEX) |>
  summarise(Count = n(), .groups = 'drop')

ggplot(data_summary, aes(x = Count, y = as.factor(YEAR), color = VIC_SEX)) +
  geom_point(size = 3) +  # Add points for each sex
  labs(title = "Cleveland Dot Plot of Victim Sex by Year",
       x = "Incident Count", y = "Year", color = "Victim Sex") +
  theme_minimal() +
  theme(axis.text.y = element_text(angle = 45, hjust = 1)) +
  scale_color_manual(values = c("blue", "pink", "grey"),labels = c("Female", "Male", "Unknown"))
```

```{r, fig.height=18, fig.width= 10}
data_summary <- crime_data |>
  group_by(YEAR, VIC_SEX, VIC_RACE) |>
  summarise(Count = n(), .groups = 'drop')

ggplot(data_summary, aes(x = Count, y = as.factor(YEAR), color = VIC_SEX)) +
  geom_point(size = 3) +  # Add points for each sex
  labs(title = "Cleveland Dot Plot of Victim Sex by Year (Faceted by Race)",
       x = "Incident Count", y = "Year", color = "Victim Sex") +
  theme_minimal() +
  theme(axis.text.y = element_text(angle = 45, hjust = 1)) +
  scale_color_manual(
    values = c("pink", "blue", "gray"),
    labels = c("Female", "Male", "Unknown")
  ) +
  facet_wrap(~ VIC_RACE, scales = "free")

```
The plot above shows that for all races, the number of male victims is almost always larger than the number of female victims in each year. The number of female victims in each year is relatively stable compared to the number of male victims for all races. We also noticed that Black, White Hispanic, and Black Hispanic are races that have the top 3 number of victims in each year.

```{r, include = FALSE, echo = FALSE}
crime_data_time_boro <- crime_data |>
  mutate(
    OCCUR_TIME = hms::as_hms(OCCUR_TIME),
    TimePeriod = floor(hour(OCCUR_TIME) / 2) * 2
  ) |>
  group_by(BORO, TimePeriod) |>
  summarise(IncidentCount = n(), .groups = "drop") |>
  mutate(BORO = factor(BORO, levels = c("BROOKLYN", "BRONX", "QUEENS", "MANHATTAN", "STATEN ISLAND")))

ggplot(crime_data_time_boro, aes(x = TimePeriod, y = BORO, fill = IncidentCount)) +
  geom_tile() +
  scale_x_continuous(breaks = seq(0, 22, by = 2), labels = paste0(seq(0, 22, by = 2), "-", seq(2, 24, by = 2))) +
  scale_fill_gradient(low = "white", high = "red") +
  labs(title = "Heatmap of Incidents by Time and Borough",
       x = "Time Period (2-hour intervals)", y = "Borough", fill = "Incident Count") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```

```{r}
df_clean_age <- df |>
  filter(VIC_AGE_GROUP != "1022", PERP_AGE_GROUP != "1020", PERP_AGE_GROUP != "(null)", PERP_AGE_GROUP != "", PERP_AGE_GROUP != "940", PERP_AGE_GROUP != "224", PERP_AGE_GROUP != "1028")

age_table <- table(df_clean_age$PERP_AGE_GROUP, df_clean_age$VIC_AGE_GROUP)

age_table_long <- as.data.frame(as.table(age_table))

colnames(age_table_long) <- c("PERP_AGE_GROUP", "VIC_AGE_GROUP", "Count")

ggplot(age_table_long, aes(x = PERP_AGE_GROUP, y = VIC_AGE_GROUP, fill = Count)) +
  geom_tile(color = "white") +  # Add white borders around tiles
  scale_fill_distiller(palette = "Blues", direction = 1) +
  labs(
    title = "Heatmap of Perpetrator and Victim Age Groups",
    x = "Perpetrator Age Group",
    y = "Victim Age Group",
    fill = "Count"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1)  # Rotate x-axis labels for readability
  )

```
The heatmap above shows the heatmap of age groups of perpetrators and victims. From the plot, we can see that the victims in 18-24 and 25-44 are much more than victims in other age groups. Other than perpetrators over 65 years old, almost perpetrators in every age group are more likely to shoot victims who are between 18-44 years old. In addition, we find that the perpetrators in 18-24 years old are more likely to shoot vitims who are 18-24 years old instead of victims who are 25-44 years old, while the perpetrators in 25-44 years old are more likely to shoot victims who are 25-44 years old instead of victims who are 18-24 years old. This is reasonable because individuals in similar age groups are more likely to interact within the same social environments.

```{r}
print(crime_data)
filtered_data <- crime_data |>
  filter(
    BORO == "BROOKLYN",                              # Only data from Brooklyn
    format(OCCUR_DATE, "%Y-%m") == "2020-07"
  ) |>
  select(OCCUR_DATE, BORO, Latitude, Longitude)
print(filtered_data)
```

```{r}
output_text <- filtered_data %>%
  mutate(
    text = paste0("{ latitude: ", Latitude, 
                  ", longitude: ", Longitude, 
                  ", date: '", OCCUR_DATE, "' }")
  ) %>%
  pull(text) %>% # Extract as a vector of text strings
  paste(collapse = ",\n  ") # Combine into a single string with line breaks

# Add brackets to wrap the final output
output_text <- paste0("[\n  ", output_text, "\n]")

# Print the result
cat(output_text)
```
```{r}
date_counts <- filtered_data %>%
  group_by(OCCUR_DATE) %>%
  summarize(Count = n())

# Print the counts
print(date_counts)
```
